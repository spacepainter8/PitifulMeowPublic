// generated with ast extension for cup
// version 0.8
// 17/0/2024 1:19:12


package rs.ac.bg.etf.pp1.ast;

public interface Visitor { 

    public void visit(FormPars FormPars);
    public void visit(Factor Factor);
    public void visit(Statement Statement);
    public void visit(ProgramCVCDeclList ProgramCVCDeclList);
    public void visit(AddTerm AddTerm);
    public void visit(ProgramVarDecl ProgramVarDecl);
    public void visit(MethodDecl MethodDecl);
    public void visit(ConstList ConstList);
    public void visit(CondFactYesNo CondFactYesNo);
    public void visit(DesignatorIdent DesignatorIdent);
    public void visit(DesignatorIdentList DesignatorIdentList);
    public void visit(ExtType ExtType);
    public void visit(Relop Relop);
    public void visit(CondFactList CondFactList);
    public void visit(MulFactList MulFactList);
    public void visit(InnerDesigName InnerDesigName);
    public void visit(MulFact MulFact);
    public void visit(DesigName DesigName);
    public void visit(Expr Expr);
    public void visit(AddTermList AddTermList);
    public void visit(ExprMinus ExprMinus);
    public void visit(DesignatorAssignopExpr DesignatorAssignopExpr);
    public void visit(FormPar FormPar);
    public void visit(ConstType ConstType);
    public void visit(ExprRBrack ExprRBrack);
    public void visit(ExprLBrack ExprLBrack);
    public void visit(DesEmptyInner DesEmptyInner);
    public void visit(DesignatorCommaList DesignatorCommaList);
    public void visit(DesEmpty DesEmpty);
    public void visit(StaticInitializerList StaticInitializerList);
    public void visit(ProgramVar ProgramVar);
    public void visit(ProgramVarList ProgramVarList);
    public void visit(Condition Condition);
    public void visit(Mulop Mulop);
    public void visit(DesignatorComma DesignatorComma);
    public void visit(DesignatorStatement DesignatorStatement);
    public void visit(NamespaceList NamespaceList);
    public void visit(CVCDeclList CVCDeclList);
    public void visit(Addop Addop);
    public void visit(ProgramCVCDecl ProgramCVCDecl);
    public void visit(StatementList StatementList);
    public void visit(Assignop Assignop);
    public void visit(DesignatorStmList DesignatorStmList);
    public void visit(FactDesStart FactDesStart);
    public void visit(Type Type);
    public void visit(CondTermList CondTermList);
    public void visit(DesignatorExpression DesignatorExpression);
    public void visit(ActParsEnd ActParsEnd);
    public void visit(MethodDeclListYesNo MethodDeclListYesNo);
    public void visit(CondTerm CondTerm);
    public void visit(VarList VarList);
    public void visit(ClassVarDecl ClassVarDecl);
    public void visit(MethodDeclList MethodDeclList);
    public void visit(MethodType MethodType);
    public void visit(EmptyExprStart EmptyExprStart);
    public void visit(ClassVarDeclList ClassVarDeclList);
    public void visit(CVCDecl CVCDecl);
    public void visit(ActPars ActPars);
    public void visit(Designator Designator);
    public void visit(DesignatorStmListYesNo DesignatorStmListYesNo);
    public void visit(VarDeclList VarDeclList);
    public void visit(CondFact CondFact);
    public void visit(StVarDeclList StVarDeclList);
    public void visit(Term Term);
    public void visit(Var Var);
    public void visit(Label Label);
    public void visit(ActParSingleExpr ActParSingleExpr);
    public void visit(ActParExprs ActParExprs);
    public void visit(ActParsStart ActParsStart);
    public void visit(FactorExpr FactorExpr);
    public void visit(FactorNewFuncParams FactorNewFuncParams);
    public void visit(FactorNewFunc FactorNewFunc);
    public void visit(FactorNewArray FactorNewArray);
    public void visit(FactorBool FactorBool);
    public void visit(FactorChar FactorChar);
    public void visit(FactorNumber FactorNumber);
    public void visit(FactorFunctionWithParams FactorFunctionWithParams);
    public void visit(FactorFunction FactorFunction);
    public void visit(FactorDesignator FactorDesignator);
    public void visit(Minus Minus);
    public void visit(Plus Plus);
    public void visit(Percent Percent);
    public void visit(Div Div);
    public void visit(Mul Mul);
    public void visit(SingleFactor SingleFactor);
    public void visit(MultipleFactors MultipleFactors);
    public void visit(MultipleTerms MultipleTerms);
    public void visit(SingleNegativeTerm SingleNegativeTerm);
    public void visit(SingleTerm SingleTerm);
    public void visit(AssignOperation AssignOperation);
    public void visit(ErrorAssignDesignator ErrorAssignDesignator);
    public void visit(AssignDesignator AssignDesignator);
    public void visit(Decrement Decrement);
    public void visit(Increment Increment);
    public void visit(NoPars NoPars);
    public void visit(ActualPars ActualPars);
    public void visit(ArrayName ArrayName);
    public void visit(InnerArrayName InnerArrayName);
    public void visit(RegularDesignatorArray RegularDesignatorArray);
    public void visit(InnerDesignatorArray InnerDesignatorArray);
    public void visit(RegularDesignator RegularDesignator);
    public void visit(InnerDesignator InnerDesignator);
    public void visit(WeirdDesignatorComma WeirdDesignatorComma);
    public void visit(WeirdDesignator WeirdDesignator);
    public void visit(NoDesignators NoDesignators);
    public void visit(Designators Designators);
    public void visit(WeirdDesStart WeirdDesStart);
    public void visit(WeirdDesignatorStatement WeirdDesignatorStatement);
    public void visit(DesAsExpr DesAsExpr);
    public void visit(DesDesExpr DesDesExpr);
    public void visit(LeqRel LeqRel);
    public void visit(LRel LRel);
    public void visit(ReqRel ReqRel);
    public void visit(RRel RRel);
    public void visit(UnRel UnRel);
    public void visit(EqRel EqRel);
    public void visit(Exprs Exprs);
    public void visit(SingleExpr SingleExpr);
    public void visit(CondFacts CondFacts);
    public void visit(SingleCondFact SingleCondFact);
    public void visit(EmptyOr EmptyOr);
    public void visit(SingleCondTerm SingleCondTerm);
    public void visit(CondTerms CondTerms);
    public void visit(ErrorConditions ErrorConditions);
    public void visit(Conditions Conditions);
    public void visit(SingleDesignatorStm SingleDesignatorStm);
    public void visit(DesignatorStms DesignatorStms);
    public void visit(DesignatorStmListNo DesignatorStmListNo);
    public void visit(DesignatorStmListYes DesignatorStmListYes);
    public void visit(CondFactNo CondFactNo);
    public void visit(CondFactYes CondFactYes);
    public void visit(IfStart IfStart);
    public void visit(IfElseEnd IfElseEnd);
    public void visit(ThenEnd ThenEnd);
    public void visit(ThenStart ThenStart);
    public void visit(EndOfCounter EndOfCounter);
    public void visit(CondStart CondStart);
    public void visit(StartOfCounter StartOfCounter);
    public void visit(StartOfBody StartOfBody);
    public void visit(ForStart ForStart);
    public void visit(GotoStatement GotoStatement);
    public void visit(LabelStatement LabelStatement);
    public void visit(NewBlockStatement NewBlockStatement);
    public void visit(ForStatement ForStatement);
    public void visit(PrintNumberStatement PrintNumberStatement);
    public void visit(PrintStatement PrintStatement);
    public void visit(ReadStatement ReadStatement);
    public void visit(ReturnExprStatement ReturnExprStatement);
    public void visit(ReturnStatement ReturnStatement);
    public void visit(ContinueStatement ContinueStatement);
    public void visit(BreakStatement BreakStatement);
    public void visit(IfElseStatement IfElseStatement);
    public void visit(IfStatement IfStatement);
    public void visit(DesStatement DesStatement);
    public void visit(NoStatements NoStatements);
    public void visit(Statements Statements);
    public void visit(StaticInitializer StaticInitializer);
    public void visit(NoStaticInitializers NoStaticInitializers);
    public void visit(StaticInitializers StaticInitializers);
    public void visit(ErrorDontKnowWhatToNameThis ErrorDontKnowWhatToNameThis);
    public void visit(DontKnowWhatToNameThis DontKnowWhatToNameThis);
    public void visit(NoStVarDecl NoStVarDecl);
    public void visit(SingleStVarDecl SingleStVarDecl);
    public void visit(ErrorTypeExtend ErrorTypeExtend);
    public void visit(NoTypeExtend NoTypeExtend);
    public void visit(TypeExtend TypeExtend);
    public void visit(ArrayVar ArrayVar);
    public void visit(SimpleVar SimpleVar);
    public void visit(ErrorProgramVar ErrorProgramVar);
    public void visit(ArrayProgramVar ArrayProgramVar);
    public void visit(SimpleProgramVar SimpleProgramVar);
    public void visit(MultipleVars MultipleVars);
    public void visit(SingleVar SingleVar);
    public void visit(MultipleProgramVars MultipleProgramVars);
    public void visit(SingleProgramVar SingleProgramVar);
    public void visit(BoolConst BoolConst);
    public void visit(CharConst CharConst);
    public void visit(NumberConst NumberConst);
    public void visit(MultipleConsts MultipleConsts);
    public void visit(SingleConst SingleConst);
    public void visit(StandaloneType StandaloneType);
    public void visit(InnerType InnerType);
    public void visit(EmptyClassVarDecl EmptyClassVarDecl);
    public void visit(SingleClassVarDecl SingleClassVarDecl);
    public void visit(EmptyVarDecl EmptyVarDecl);
    public void visit(SingleVarDecl SingleVarDecl);
    public void visit(MethodTypeVoid MethodTypeVoid);
    public void visit(MethodTypeType MethodTypeType);
    public void visit(ErrorFormPar ErrorFormPar);
    public void visit(FormParArray FormParArray);
    public void visit(FormParIdent FormParIdent);
    public void visit(SingleFormPar SingleFormPar);
    public void visit(FormParList FormParList);
    public void visit(MethodTypeName MethodTypeName);
    public void visit(MethodDeclFormPars MethodDeclFormPars);
    public void visit(MethodDeclNoFormPars MethodDeclNoFormPars);
    public void visit(EmptyMethodDecl EmptyMethodDecl);
    public void visit(MethodDecls MethodDecls);
    public void visit(MethodDeclListNoExist MethodDeclListNoExist);
    public void visit(MethodDeclListExist MethodDeclListExist);
    public void visit(ClassDecl ClassDecl);
    public void visit(VarDecl VarDecl);
    public void visit(ProgramVarDeclEnd ProgramVarDeclEnd);
    public void visit(ErrorProgramVarDecls ErrorProgramVarDecls);
    public void visit(ProgramVarDecls ProgramVarDecls);
    public void visit(ConstDeclEnd ConstDeclEnd);
    public void visit(ConstDecl ConstDecl);
    public void visit(Classes Classes);
    public void visit(Vars Vars);
    public void visit(Consts Consts);
    public void visit(ProgramClasses ProgramClasses);
    public void visit(ProgramVars ProgramVars);
    public void visit(ProgramConsts ProgramConsts);
    public void visit(NoCVCDecls NoCVCDecls);
    public void visit(CVCDecls CVCDecls);
    public void visit(NoProgramCVCDecls NoProgramCVCDecls);
    public void visit(ProgramCVCDecls ProgramCVCDecls);
    public void visit(NamespaceName NamespaceName);
    public void visit(Namespace Namespace);
    public void visit(NoNamespaces NoNamespaces);
    public void visit(Namespaces Namespaces);
    public void visit(ProgName ProgName);
    public void visit(Program Program);

}
